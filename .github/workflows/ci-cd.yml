name: restaurante-saas-ci-cd

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: restaurante_saas_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Generate Prisma client
      working-directory: ./backend
      run: npx prisma generate
    
    - name: Run migrations
      working-directory: ./backend
      run: npx prisma migrate dev --name ci-test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/restaurante_saas_test?schema=public
    
    - name: Build
      working-directory: ./backend
      run: npm run build
    
    - name: Run tests
      working-directory: ./backend
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/restaurante_saas_test?schema=public
        JWT_SECRET: test_secret_key
        NODE_ENV: test
  
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build
      working-directory: ./frontend
      run: npm run build
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test
